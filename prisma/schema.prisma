generator client {
  provider = "prisma-client-js"
}

generator json {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String         @id
  organizations Organization[]
  crafts        Craft[]
}

model Organization {
  id     String  @id
  users  User[]
  crafts Craft[]
}

model Craft {
  id               String         @id @default(cuid())
  title            String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  organization     Organization?  @relation(fields: [organizationId], references: [id])
  organizationId   String?
  craftVersions    CraftVersion[]
  liveCraftVersion CraftVersion?  @relation(name: "liveVersion", fields: [liveVersionId], references: [id])
  liveVersionId    String?
}

model CraftVersion {
  id               String            @id @default(cuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  craft            Craft?            @relation(fields: [craftId], references: [id], onDelete: Cascade)
  craftId          String?
  liveVersionCraft Craft[]           @relation(name: "liveVersion")
  craftSubmissions CraftSubmission[]

  /// [CraftVersionData]
  data Json
}

model CraftSubmission {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  craftVersion   CraftVersion? @relation(fields: [craftVersionId], references: [id], onDelete: Cascade)
  craftVersionId String?
  data           Json
}
